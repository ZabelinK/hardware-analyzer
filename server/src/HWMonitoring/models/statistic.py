# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from HWMonitoring.models.base_model_ import Model
from HWMonitoring import util


class Statistic(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id = db.Column(db.Integer, primary_key=True)
    machine_id = db.Column(db.String(64), ForeingKey('machine.id'), index=True)
   
    def __init__(self, id: int=None, machine_id: int=None, process: int=None, cpu_load: int=None, memory_load: int=None, timestamp: datetime=None):  # noqa: E501
        """Statistic - a model defined in Swagger

        :param id: The id of this Statistic.  # noqa: E501
        :type id: int
        :param machine_id: The machine_id of this Statistic.  # noqa: E501
        :type machine_id: int
        :param process: The process of this Statistic.  # noqa: E501
        :type process: int
        :param cpu_load: The cpu_load of this Statistic.  # noqa: E501
        :type cpu_load: int
        :param memory_load: The memory_load of this Statistic.  # noqa: E501
        :type memory_load: int
        :param timestamp: The timestamp of this Statistic.  # noqa: E501
        :type timestamp: datetime
        """
        self.swagger_types = {
            'id': int,
            'machine_id': int,
            'process': int,
            'cpu_load': int,
            'memory_load': int,
            'timestamp': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'machine_id': 'machineId',
            'process': 'process',
            'cpu_load': 'cpuLoad',
            'memory_load': 'memoryLoad',
            'timestamp': 'timestamp'
        }

        self._id = id
        self._machine_id = machine_id
        self._process = process
        self._cpu_load = cpu_load
        self._memory_load = memory_load
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'Statistic':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Statistic of this Statistic.  # noqa: E501
        :rtype: Statistic
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Statistic.


        :return: The id of this Statistic.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Statistic.


        :param id: The id of this Statistic.
        :type id: int
        """

        self._id = id

    @property
    def machine_id(self) -> int:
        """Gets the machine_id of this Statistic.


        :return: The machine_id of this Statistic.
        :rtype: int
        """
        return self._machine_id

    @machine_id.setter
    def machine_id(self, machine_id: int):
        """Sets the machine_id of this Statistic.


        :param machine_id: The machine_id of this Statistic.
        :type machine_id: int
        """

        self._machine_id = machine_id

    @property
    def process(self) -> int:
        """Gets the process of this Statistic.


        :return: The process of this Statistic.
        :rtype: int
        """
        return self._process

    @process.setter
    def process(self, process: int):
        """Sets the process of this Statistic.


        :param process: The process of this Statistic.
        :type process: int
        """

        self._process = process

    @property
    def cpu_load(self) -> int:
        """Gets the cpu_load of this Statistic.


        :return: The cpu_load of this Statistic.
        :rtype: int
        """
        return self._cpu_load

    @cpu_load.setter
    def cpu_load(self, cpu_load: int):
        """Sets the cpu_load of this Statistic.


        :param cpu_load: The cpu_load of this Statistic.
        :type cpu_load: int
        """

        self._cpu_load = cpu_load

    @property
    def memory_load(self) -> int:
        """Gets the memory_load of this Statistic.


        :return: The memory_load of this Statistic.
        :rtype: int
        """
        return self._memory_load

    @memory_load.setter
    def memory_load(self, memory_load: int):
        """Sets the memory_load of this Statistic.


        :param memory_load: The memory_load of this Statistic.
        :type memory_load: int
        """

        self._memory_load = memory_load

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this Statistic.


        :return: The timestamp of this Statistic.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this Statistic.


        :param timestamp: The timestamp of this Statistic.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
